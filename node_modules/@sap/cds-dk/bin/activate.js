module.exports = Object.assign(activate, {
    options: ['--subdomain', '--passcode', '--username', '--clientid', '--to'],
    flags: ['--undeploy', '--wsdl'],
    shortcuts: ['-s', '-p', '-u', '-c'],
    help: `
# SYNOPSIS

    *cds activate* [ <extension-project-directory> ]

    Activates an extension project, with the current working directory as default.
    <extension-project-directory> specifies the path to your project, not using the default.


# OPTIONS

    *--to* <url>
        Specify the URL of the extension project that you want to activate.

    *-s* | *--subdomain* <subdomain>

        Specify the subdomain of the subaccount where you activate the extension. 

    *-p* | *--passcode* <passcode>

        Add the passcode used for authentication. 
        Also see cds login --help or https://cap.cloud.sap/docs/guides/extensibility#save-authentication-token-for-simplified-workflow

    *-u* | *--username* <name>

        Deprecated. Use the passcode parameter.

    *-c* | *--clientid* <clientid> 

        Client ID for authentication. This will override the default Client ID from environment.

    *--undeploy*

        Undeploy a previously deployed extension.

`})


async function activate ([projectFolder], options = {}) {
    const injection = {
        cds: require('@sap/cds/lib')
    }

    Object.assign(options, { projectFolder })

    const client = require('@sap/cds-sidecar-client')
    await client.apply(injection, options)
}



/* eslint no-console: off */
