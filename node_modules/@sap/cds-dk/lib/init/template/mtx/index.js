const TemplateBase = require('../templateBase');
const ProjectReader = require('../mta/projectReader');
const { OPTION_HANA } = require('../../constants');


module.exports = class MtxTemplate extends TemplateBase {
    constructor(projectPath, generator) {
        super(projectPath, generator, __dirname);
        this.projectReader = new ProjectReader(this);
    }

    async getDependencies() {
        return [OPTION_HANA];
    }

    async checkEnabled() {
        return true;
    }

    async run() {
        await this._writePackageJson();
        const projectDescriptor = await this.projectReader.read();
        await this.templateUtil.copyFiles('.', this.projectPath, projectDescriptor);
    }

    async _writePackageJson() {
        const packageJSONPath = `${this.projectPath}/package.json`;
        const packageJSON = await this.fsUtil.readJSON(packageJSONPath);
        const filePaths = await this.fsUtil.readdir(`${__dirname}/package/`);
        const templatePaths = filePaths.filter(path => path.endsWith(`.package.json`));

        for (const fileName of templatePaths) {
            const key = fileName.split(`.package.json`)[0];
            const templateJSON = await this.fsUtil.readJSON(`${__dirname}/package/${fileName}`);
            packageJSON[key] = packageJSON[key] || {};
            Object.assign(packageJSON[key], templateJSON);
        }

        await this.fsUtil.writeJSON(packageJSONPath, JSON.parse(JSON.stringify(packageJSON)));
    }
}
