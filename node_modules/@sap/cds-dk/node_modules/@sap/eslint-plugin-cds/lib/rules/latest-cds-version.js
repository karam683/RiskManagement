"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const ruleFactory_1 = require("../ruleFactory");
const child_process_1 = __importDefault(require("child_process"));
const semver_1 = __importDefault(require("semver"));
module.exports = ruleFactory_1.createRule({
    type: 'suggestion',
    docs: {
        description: `Checks whether the latest cds version is being used.`,
        category: 'Environment',
        version: '1.0.4'
    },
}, (cds, context) => {
    const report = [];
    let result;
    let cdsVersions;
    if (!cds.environment) {
        try {
            result = child_process_1.default.execSync(`npm outdated @sap/cds --json`, {
                cwd: process.cwd()
            }).toString();
            cdsVersions = JSON.parse(result)['@sap/cds'];
        }
        catch (err) {
        }
    }
    else {
        cdsVersions = cds.environment['@sap/cds'];
    }
    if (Object.keys(cdsVersions).length !== 0 && !semver_1.default.satisfies(cdsVersions.latest, cdsVersions.current)) {
        report.push({
            message: `A newer CDS version ${cdsVersions.latest} is available!`,
            loc: { line: 0, column: 0 }
        });
    }
    return report;
});
//# sourceMappingURL=latest-cds-version.js.map